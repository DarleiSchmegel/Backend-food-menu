// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  // for yarn monorepos
  // provider = "prisma-nestjs-graphql"
  output   = "../src/@generated"
}

// generator graphql {
//   provider = "graphql-schema-generator"
//   createCRUD = "true"
//   output = "../src/generated"
// }

// generator nestjsDto {
//   provider                        = "prisma-generator-nestjs-dto"
//   output                          = "../src/generated/nestjs-dto"
//   outputToNestJsResourceStructure = "false"
//   exportRelationModifierClasses   = "true"
//   reExport                        = "false"
//   createDtoPrefix                 = "Create"
//   updateDtoPrefix                 = "Update"
//   dtoSuffix                       = "Dto"
//   entityPrefix                    = ""
//   entitySuffix                    = ""
//   fileNamingStyle                 = "camel"
// }

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  name       String?
  password   String?
  plan       String?
  restaurant Restaurant?
}

model Restaurant {
  id           Int     @id @default(autoincrement())
  title        String
  banner       String?
  fone         String?
  address      String?
  openingHours String?
  manager      User    @relation(fields: [managerId], references: [id])
  managerId    Int     @unique
  menu         Menu?
}

model Menu {
  id           Int         @id @default(autoincrement())
  title        String
  banner       String?
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId Int         @unique
  plateFood    PlateFood[]
  category     Category[]
}

model PlateFood {
  id          Int      @id @default(autoincrement())
  title       String
  ingredients String
  setupTime   String
  image       String?
  menu        Menu     @relation(fields: [menuId], references: [id])
  menuId      Int      @unique
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int      @unique
}

model Category {
  id         Int         @id @default(autoincrement())
  title      String
  plateFoode PlateFood[]
  menu       Menu        @relation(fields: [menuId], references: [id])
  menuId     Int         @unique
}
